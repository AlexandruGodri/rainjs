#!/usr/bin/env node

//Copyright Â© 2012 rainjs
//
// All rights reserved
//
// Redistribution and use in source and binary forms, with or without modification, are permitted
// provided that the following conditions are met:
//
//    1. Redistributions of source code must retain the above copyright notice, this list of
//       conditions and the following disclaimer.
//    2. Redistributions in binary form must reproduce the above copyright notice, this list of
//       conditions and the following disclaimer in the documentation and/or other materials
//       provided with the distribution.
//    3. Neither the name of The author nor the names of its contributors may be used to endorse or
//       promote products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
// SHALL THE AUTHOR AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
// OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

var program = require('commander'),
    path = require('path'),
    fs = require('fs'),
    sdkUtils = require('./lib/utils');

var root = path.dirname(__dirname);

function getProjectRoot(dir) {
    try {
         return sdkUtils.getProjectRoot(program.dir);
    } catch (e) {
        console.log(program.dir, 'is not a valid rain project.');
        process.exit(1);
    }
}

program
    .version(require(path.join(root, 'package.json')).version)
    .usage('[options]')
    .option('-c, --conf <path>', 'start the server with a custom configuration file', getProjectRoot,
                                 path.join(program.dir, 'conf', 'server.conf.default'))
    .option('-d, --debug', 'start the server in debug mode')
    .option('-D, --dir <path>', 'the server working directory', process.env.RAIN_CWD || process.cwd());

program.parse(process.argv);

var pidFile = path.join('/tmp/rain.pid'),
    projectRoot = getProjectRoot(program.dir);

if (program.debug && 'win32' != process.platform) {
    process.kill(process.pid, 'SIGUSR1');
}

fs.writeFileSync(pidFile, process.pid);
process.on('SIGTERM', function () {
    fs.truncateSync(fs.openSync(pidFile, 'w+'), 0);
    process.exit();
});

process.title = 'rain-server';
process.chdir(projectRoot);
require(path.join(root, 'lib', 'server')).initialize();
